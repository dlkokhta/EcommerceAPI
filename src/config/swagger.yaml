openapi: 3.0.0
info:
  title: eCommerce App API
  description: eCommerce App API
  version: 0.1.9

servers:
  - url: https://ecommerceapi-production-7d9c.up.railway.app/
    description: production server
  - url: http://localhost:3000
    description: local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /api/register:
    post:
      summary: Create new user
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The username of the user
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  description: The password of the user
                repeatPassword:
                  type: string
                  description: The repeated password of the user
                # role:
                #   type: string
                #   description: The role of the user
                #   enum: [user, admin]
                #   default: user
                #   example: user
      responses:
        "200":
          description: User successfully added to the database
        "400":
          description: Bad request, username is required
        "500":
          description: Internal server error

  /api/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The username of the user
                password:
                  type: string
                  description: The password of the user
      responses:
        "200":
          description: User successfully logged in
        "401":
          description: Unauthorized, invalid credentials
        "500":
          description: Internal server error

  /api/addItem:
    post:
      security:
        - bearerAuth: []
      summary: add a new item
      description: This endpoint allows you to create a new item.
      tags:
        - Add Item
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                brand:
                  type: string
                  description: The title of the item
                model:
                  type: string
                  description: The description of the item
                gender:
                  type: string
                  description: The gender of the item
                color:
                  type: string
                  description: The color of the item
                description:
                  type: string
                  description: The content of the item
                price:
                  type: number
                  description: The price of the item
                sizes:
                  type: array
                  items:
                    type: string
                  description: Array of sizes available for the item
                # availability:
                #   type: boolean
                #   description: The availability of the item
                #   default: true
                image:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Array of image files for the item (accepted formats: png, jpg, jpeg)

                # image:
                #   type: string
                #   format: binary
                #   description: The image file of the item (accepted formats: png, jpg, jpeg)
      responses:
        "201":
          description: item created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The success message
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /api/getAllShoes:
    get:
      security:
        - bearerAuth: []
      tags:
        - Get all shoes

      summary: Get all shoes
      description: This endpoint allows you to get all shoes.
      responses:
        "200":
          description: Shoes ogs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The success message
        "500":
          description: Internal server error

  # /api/shoesById/{id}:
  #   get:
  #     summary: Get a shoes by id
  #     description: This endpoint allows you to get a shoes by id.
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         description: The id of the blog
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: shoes retrieved successfully
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 message:
  #                   type: string
  #                   description: The success message

  /api/getCartItems/{email}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Get Cart Items
      summary: Get Cart Items
      description: This endpoint allows you to get cart items.
      parameters:
        - in: path
          name: email
          required: true
          description: The email of the blog
          schema:
            type: string
      responses:
        "200":
          description: items ogs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The success message
        "500":
          description: Internal server error

  /api/postCart:
    post:
      tags:
        - postCart
      summary: Save item to cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The ID of the user
                  example: "example@mail.com"
                cartItems:
                  type: array
                  items:
                    type: object
                    properties:
                      itemId:
                        type: string
                        description: The ID of the item to be added to cart
                        example: "789012"
                      size:
                        type: string
                        description: The size of the item to be added to cart
                        example: "us10"
                      quantity:
                        type: number
                        description: The quantity of the item to be added to cart
                        example: 1
      responses:
        "200":
          description: Item added successfully
        "401":
          description: Unauthorized - Title not found or item already exists

  /api/deleteShoes/{email}/{itemId}:
    delete:
      tags:
        - Delete Shoes
      summary: Delete Shoes
      description: Deletes a shoe item based on the user's email and item ID
      parameters:
        - in: path
          name: email
          required: true
          description: The email of the user
          schema:
            type: string
        - in: path
          name: itemId
          required: true
          description: The item ID of the shoe
          schema:
            type: ObjectId
      responses:
        "200":
          description: Item deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The success message
        "500":
          description: Internal server error


  /api/deleteShoesByAdmin/{id}:
   delete:
    tags:
      - Delete Shoes
    summary: Delete Shoes
    description: Deletes a shoe item based on the item's ID
    parameters:
      - in: path
        name: id
        required: true
        description: The item ID of the shoe
        schema:
          type: string
    responses:
      "204":
        description: Item deleted successfully
      "404":
        description: Item not found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: The error message
      "500":
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: The error message
        
  /api/getAllUsers:
    get:
      security:
        - bearerAuth: []
      tags:
        - Get all users

      summary: Get all users
      description: This endpoint allows you to get all users.
      responses:
        "200":
          description: users ogs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The success message
        "500":
          description: Internal server error 

  /api/deleteUserByAdmin/{id}:
   delete:
    tags:
      - Delete User
    summary: Delete User
    description: Deletes a user item based on the item's ID
    parameters:
      - in: path
        name: id
        required: true
        description: The item ID of the shoe
        schema:
          type: string
    responses:
      "204":
        description: user deleted successfully
      "404":
        description: user not found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: The error message
      "500":
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: The error message            

  /api/recoverPassword:
    post:
      summary: User password recovery
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the user
      responses:
        "200":
          description: Password recovery email sent
        "400":
          description: Bad request, email is required
        "500":
          description: Internal server error

  /api/verify/{param}:
    post:
      summary: Verify a user
      description: This endpoint verifies a user based on a key passed in the query string.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                param:
                  type: string
                  description: The phonenumber of the user

      responses:
        "200":
          description: User verification status updated to true
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User verification status updated to true
        "400":
          description: Invalid verification key
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid verification key

  paths:
  /api/resetPassword:
    put:
      summary: Reset user password
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                param:
                  type: string
                  description: The recovery token
                password:
                  type: string
                  description: The new password
      responses:
        "200":
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password reset successful
        "400":
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid token
        "500":
          description: Internal server error